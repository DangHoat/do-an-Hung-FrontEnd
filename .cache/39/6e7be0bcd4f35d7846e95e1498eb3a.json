{"id":"../node_modules/html-parse-stringify2/lib/parse.js","dependencies":[{"name":"C:\\Users\\OAI-IICM\\Desktop\\frontEndDoAn\\package.json","includedInParent":true,"mtime":1606905862379},{"name":"C:\\Users\\OAI-IICM\\Desktop\\frontEndDoAn\\node_modules\\html-parse-stringify2\\package.json","includedInParent":true,"mtime":1606903372349},{"name":"./parse-tag","loc":{"line":3,"column":23},"parent":"C:\\Users\\OAI-IICM\\Desktop\\frontEndDoAn\\node_modules\\html-parse-stringify2\\lib\\parse.js","resolved":"C:\\Users\\OAI-IICM\\Desktop\\frontEndDoAn\\node_modules\\html-parse-stringify2\\lib\\parse-tag.js"}],"generated":{"js":"/*jshint -W030 */\nvar tagRE = /(?:<!--[\\S\\s]*?-->|<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>)/g;\nvar parseTag = require('./parse-tag');\n// re-used obj for quick lookups of components\nvar empty = Object.create ? Object.create(null) : {};\n// common logic for pushing a child node onto a list\nfunction pushTextNode(list, html, level, start, ignoreWhitespace) {\n    // calculate correct end of the content slice in case there's\n    // no tag after the text node.\n    var end = html.indexOf('<', start);\n    var content = html.slice(start, end === -1 ? undefined : end);\n    // if a node is nothing but whitespace, collapse it as the spec states:\n    // https://www.w3.org/TR/html4/struct/text.html#h-9.1\n    if (/^\\s*$/.test(content)) {\n        content = ' ';\n    }\n    // don't add whitespace-only text nodes if they would be trailing text nodes\n    // or if they would be leading whitespace-only text nodes:\n    //  * end > -1 indicates this is not a trailing text node\n    //  * leading node is when level is -1 and list has length 0\n    if ((!ignoreWhitespace && end > -1 && level + list.length >= 0) || content !== ' ') {\n        list.push({\n            type: 'text',\n            content: content\n        });\n    }\n}\n\nmodule.exports = function parse(html, options) {\n    options || (options = {});\n    options.components || (options.components = empty);\n    var result = [];\n    var current;\n    var level = -1;\n    var arr = [];\n    var byTag = {};\n    var inComponent = false;\n\n    html.replace(tagRE, function (tag, index) {\n        if (inComponent) {\n            if (tag !== ('</' + current.name + '>')) {\n                return;\n            } else {\n                inComponent = false;\n            }\n        }\n\n        var isOpen = tag.charAt(1) !== '/';\n        var isComment = tag.indexOf('<!--') === 0;\n        var start = index + tag.length;\n        var nextChar = html.charAt(start);\n        var parent;\n\n        if (isOpen && !isComment) {\n            level++;\n\n            current = parseTag(tag);\n            if (current.type === 'tag' && options.components[current.name]) {\n                current.type = 'component';\n                inComponent = true;\n            }\n\n            if (!current.voidElement && !inComponent && nextChar && nextChar !== '<') {\n                pushTextNode(current.children, html, level, start, options.ignoreWhitespace);\n            }\n\n            byTag[current.tagName] = current;\n\n            // if we're at root, push new base node\n            if (level === 0) {\n                result.push(current);\n            }\n\n            parent = arr[level - 1];\n\n            if (parent) {\n                parent.children.push(current);\n            }\n\n            arr[level] = current;\n        }\n\n        if (isComment || !isOpen || current.voidElement) {\n            if (!isComment) {\n                level--;\n            }\n            if (!inComponent && nextChar !== '<' && nextChar) {\n                // trailing text node\n                // if we're at the root, push a base text node. otherwise add as\n                // a child to the current node.\n                parent = level === -1 ? result : arr[level].children;\n                pushTextNode(parent, html, level, start, options.ignoreWhitespace);\n            }\n        }\n    });\n\n    // If the \"html\" passed isn't actually html, add it as a text node.\n    if (!result.length && html.length) {\n        pushTextNode(result, html, 0, 0, options.ignoreWhitespace);\n    }\n\n    return result;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/html-parse-stringify2/lib/parse.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}}],"sources":{"../node_modules/html-parse-stringify2/lib/parse.js":"/*jshint -W030 */\nvar tagRE = /(?:<!--[\\S\\s]*?-->|<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>)/g;\nvar parseTag = require('./parse-tag');\n// re-used obj for quick lookups of components\nvar empty = Object.create ? Object.create(null) : {};\n// common logic for pushing a child node onto a list\nfunction pushTextNode(list, html, level, start, ignoreWhitespace) {\n    // calculate correct end of the content slice in case there's\n    // no tag after the text node.\n    var end = html.indexOf('<', start);\n    var content = html.slice(start, end === -1 ? undefined : end);\n    // if a node is nothing but whitespace, collapse it as the spec states:\n    // https://www.w3.org/TR/html4/struct/text.html#h-9.1\n    if (/^\\s*$/.test(content)) {\n        content = ' ';\n    }\n    // don't add whitespace-only text nodes if they would be trailing text nodes\n    // or if they would be leading whitespace-only text nodes:\n    //  * end > -1 indicates this is not a trailing text node\n    //  * leading node is when level is -1 and list has length 0\n    if ((!ignoreWhitespace && end > -1 && level + list.length >= 0) || content !== ' ') {\n        list.push({\n            type: 'text',\n            content: content\n        });\n    }\n}\n\nmodule.exports = function parse(html, options) {\n    options || (options = {});\n    options.components || (options.components = empty);\n    var result = [];\n    var current;\n    var level = -1;\n    var arr = [];\n    var byTag = {};\n    var inComponent = false;\n\n    html.replace(tagRE, function (tag, index) {\n        if (inComponent) {\n            if (tag !== ('</' + current.name + '>')) {\n                return;\n            } else {\n                inComponent = false;\n            }\n        }\n\n        var isOpen = tag.charAt(1) !== '/';\n        var isComment = tag.indexOf('<!--') === 0;\n        var start = index + tag.length;\n        var nextChar = html.charAt(start);\n        var parent;\n\n        if (isOpen && !isComment) {\n            level++;\n\n            current = parseTag(tag);\n            if (current.type === 'tag' && options.components[current.name]) {\n                current.type = 'component';\n                inComponent = true;\n            }\n\n            if (!current.voidElement && !inComponent && nextChar && nextChar !== '<') {\n                pushTextNode(current.children, html, level, start, options.ignoreWhitespace);\n            }\n\n            byTag[current.tagName] = current;\n\n            // if we're at root, push new base node\n            if (level === 0) {\n                result.push(current);\n            }\n\n            parent = arr[level - 1];\n\n            if (parent) {\n                parent.children.push(current);\n            }\n\n            arr[level] = current;\n        }\n\n        if (isComment || !isOpen || current.voidElement) {\n            if (!isComment) {\n                level--;\n            }\n            if (!inComponent && nextChar !== '<' && nextChar) {\n                // trailing text node\n                // if we're at the root, push a base text node. otherwise add as\n                // a child to the current node.\n                parent = level === -1 ? result : arr[level].children;\n                pushTextNode(parent, html, level, start, options.ignoreWhitespace);\n            }\n        }\n    });\n\n    // If the \"html\" passed isn't actually html, add it as a text node.\n    if (!result.length && html.length) {\n        pushTextNode(result, html, 0, 0, options.ignoreWhitespace);\n    }\n\n    return result;\n};\n"},"lineCount":104}},"error":null,"hash":"10011efd0fea348d1fc4e28d14f7aabb","cacheData":{"env":{}}}